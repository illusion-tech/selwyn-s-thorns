import type { 数值, 未知, 资源标识 } from "../运行时/全局常量.ts";
import { 否, 是 } from "../运行时/全局常量.ts";
import { 主题 } from "../运行时/响应式/主题.ts";
import { 接口 } from "../运行时/易次元.ts";

interface 教程面板参数 {
    资源标识: 资源标识;
}

interface 简单教程类构造参数 {
    面板: 教程面板参数[];
}

export class 简单教程类 {
    面板集合: 资源标识[] = [];
    当前面板: 数值 = 0;

    constructor(参数: 简单教程类构造参数) {
        this.面板集合 = 参数.面板.map((面板参数) => 面板参数.资源标识);
    }

    async 显示() {
        const 面板数量 = this.面板集合.length;
        const 当前页$ = new 主题<数值>();
        let 当前页 = 0;

        await 接口.创建图层("教程面板_图层", {
            位置: { 横: 640, 纵: 360 },
            锚点: { 横: 50, 纵: 50 },
            裁剪模式: 是,
            裁剪区域: { 宽: 1280, 高: 720 },
            事件阻挡: 是,
        });

        for (const [索引, 资源标识] of this.面板集合.entries()) {
            const 图层名称 = `教程面板_${索引}_图层`;
            const 图片名称 = `教程面板_${索引}_图片`;
            await 接口.创建图层(图层名称, {
                所属图层: "教程面板_图层",
                位置: { 横: 640, 纵: 360 },
                锚点: { 横: 50, 纵: 50 },
                裁剪模式: 是,
                裁剪区域: { 宽: 1280, 高: 720 },
                是否可见: 否,
            });
            await 接口.创建图片(图片名称, {
                所属图层: 图层名称,
                资源标识: 资源标识,
                位置: { 横: 640, 纵: 360 },
                锚点: { 横: 50, 纵: 50 },
            });

            当前页$.订阅((当前页) => {
                if (当前页 === 索引) 接口.显示对象(图层名称);
                else 接口.隐藏对象(图层名称);
            });
        }

        await 接口.创建图层("教程面板_按钮图层", {
            所属图层: "教程面板_图层",
            层级索引: 100,
            位置: { 横: 640, 纵: 360 },
            锚点: { 横: 50, 纵: 50 },
            裁剪模式: 是,
            裁剪区域: { 宽: 1280, 高: 720 },
            是否可见: 是,
        });

        await 接口.创建选项("教程面板_上一页按钮", {
            所属图层: "教程面板_按钮图层",
            资源标识: "$51035452", // resId: "$51035452",
            位置: { 横: 318, 纵: 372 },
            锚点: { 横: 50, 纵: 50 },
            点击音效: { 资源标识: "$532507", 音量: 80 },
            是否可见: 否,
            当点触结束时: () => {
                if (当前页 > 0) 当前页$.下一个(当前页 - 1);
            },
        });

        await 接口.创建选项("教程面板_下一页按钮", {
            所属图层: "教程面板_按钮图层",
            资源标识: "$51035451", // resId: "$51035451",
            位置: { 横: 968, 纵: 372 },
            锚点: { 横: 50, 纵: 50 },
            点击音效: { 资源标识: "$532507", 音量: 80 },
            是否可见: 否,
            当点触结束时: () => {
                if (当前页 < 面板数量 - 1) 当前页$.下一个(当前页 + 1);
            },
        });

        let 履行承诺 = (_: 未知) => {};

        await 接口.创建选项("教程面板_关闭按钮", {
            所属图层: "教程面板_按钮图层",
            资源标识: "$51035453", // resId: "$51035453",
            位置: { 横: 948, 纵: 578 },
            锚点: { 横: 50, 纵: 50 },
            是否可见: 否,
            当点触结束时: () => {
                接口.隐藏对象("教程面板_图层");
                履行承诺(是);
                当前页$.完成();
            },
        });

        当前页$.订阅((下一页) => {
            当前页 = 下一页;
            // 接口.显示对象(`教程面板_${当前页}_图层`);
            if (当前页 === 0) 接口.隐藏对象("教程面板_上一页按钮");
            else 接口.显示对象("教程面板_上一页按钮");
            if (当前页 === 面板数量 - 1) 接口.隐藏对象("教程面板_下一页按钮");
            else 接口.显示对象("教程面板_下一页按钮");
            if (当前页 === 面板数量 - 1) 接口.显示对象("教程面板_关闭按钮");
            else 接口.隐藏对象("教程面板_关闭按钮");
        });

        接口.播放音频("教程面板_音频", { 资源标识: "$51633" }); // resId: "$51633"

        当前页$.下一个(当前页);

        return new Promise((履行) => (履行承诺 = 履行));
    }
}

async function 测试() {
    const 教程面板 = new 简单教程类({
        面板: [{ 资源标识: "$52524443" }, { 资源标识: "$52524444" }, { 资源标识: "$52524445" }],
    });

    await 教程面板.显示();
}
