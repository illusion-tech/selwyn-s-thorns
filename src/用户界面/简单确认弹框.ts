import { 是, type 坐标, type 资源标识, type 字符串, type 大小, 水平对齐方式, 垂直对齐方式 } from "../运行时/全局常量.ts";
import { 接口 } from "../运行时/易次元.ts";

interface 按钮 {
    资源标识: 资源标识;
    位置: 坐标;
}

interface 文本 {
    内容: 字符串;
    位置: 坐标;
    大小: 大小;
}

interface 构造参数 {
    资源标识: 资源标识;
    确认按钮: 按钮;
    取消按钮: 按钮;
    所属图层?: 字符串;
    文本?: 文本;
}

export class 简单确认弹框类 {
    #资源标识: 资源标识;
    #所属图层: 字符串;
    #确认按钮: 按钮;
    #取消按钮: 按钮;
    #文本?: 文本;

    constructor(参数: 构造参数) {
        this.#资源标识 = 参数.资源标识;
        this.#确认按钮 = 参数.确认按钮;
        this.#取消按钮 = 参数.取消按钮;
        this.#所属图层 = 参数.所属图层 ?? "window";
        this.#文本 = 参数.文本;
    }

    async 显示() {
        const 图层名称 = "确认弹框_图层";

        let 履行: (值: unknown) => void;
        let 拒绝: (原因: unknown) => void;
        const 承诺 = new Promise((resolve, reject) => {
            履行 = resolve;
            拒绝 = reject;
        });

        await 接口.创建图层(图层名称, {
            所属图层: this.#所属图层,
            层级索引: 300,
            位置: { 横: 640, 纵: 360 },
            锚点: { 横: 50, 纵: 50 },
            裁剪模式: 是,
            裁剪区域: { 宽: 1280, 高: 720 },
            事件阻挡: 是,
        });

        await 接口.创建图片("确认弹框_背景_图片", {
            资源标识: this.#资源标识,
            所属图层: 图层名称,
            位置: { 横: 640, 纵: 360 },
            锚点: { 横: 50, 纵: 50 },
        });

        await 接口.创建选项("确认弹框_确认按钮_选项", {
            资源标识: this.#确认按钮.资源标识,
            所属图层: 图层名称,
            位置: this.#确认按钮.位置,
            当点触结束时: () => {
                接口.移除对象(图层名称);
                履行("用户确认");
            },
        });

        await 接口.创建选项("确认弹框_取消按钮_选项", {
            资源标识: this.#取消按钮.资源标识,
            所属图层: 图层名称,
            位置: this.#取消按钮.位置,
            当点触结束时: () => {
                接口.移除对象(图层名称);
                拒绝("用户取消");
            },
        });

        if (this.#文本) {
            await 接口.创建文本("确认弹框_文本_文本", {
                文本内容: this.#文本.内容,
                所属图层: 图层名称,
                位置: this.#文本.位置,
                锚点: { 横: 50, 纵: 50 },
                文本框大小: this.#文本.大小,
                水平对齐方式: 水平对齐方式.居中,
                垂直对齐方式: 垂直对齐方式.居中,
            });
        }

        return 承诺;
    }
}
