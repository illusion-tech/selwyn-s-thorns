import { 立绘人物类, type 立绘人物管理器接口 } from '../应用/立绘人物.ts';
import { 字符串, 数值, 是, 资源标识 } from "../运行时/全局常量.ts";
import { 常量, 接口 } from "../运行时/易次元.ts";

interface 创建参数 {
    立绘风格: 字符串[];
    获取风格函数: () => 数值;
    设置风格函数: (风格: 数值) => void;
}

export class 立绘人物管理器类 implements 立绘人物管理器接口 {
    创建风格切换立绘(
        创建参数: 创建参数,
        立绘映射: { [键: 字符串]: [资源标识, 资源标识] },
    ) {
        return new 立绘人物类(this, { 立绘映射, ...创建参数 });
    }


    async 显示(立绘: 立绘人物类) {
        await 接口.创建图片("立绘人物_立绘图", {
            层级索引: 0,
            资源标识: 立绘.立绘资源,
            所属图层: "window",
            位置: { 横: 640, 纵: 360 },
            锚点: { 横: 50, 纵: 50 },
            是否可见: 是,
            动态缩放模式: 常量.动态缩放模式.适应,
        });

        const { 宽: 画布宽度 } = await 接口.获取画布大小();
        const 横 = ((画布宽度 / 2 - 370) / 画布宽度) * 1280;

        await 接口.创建选项("切换立绘风格按钮", {
            层级索引: 1,
            所属图层: "window",
            资源标识: 立绘.切换按钮,
            位置: { 横, 纵: 260 },
            锚点: { 横: 50, 纵: 50 },
            当点触结束时: () => 立绘.切换立绘风格(),
        });
    }

    async 移除() {
        await 接口.移除对象("立绘人物_立绘图");
        await 接口.移除对象("切换立绘风格按钮");
    }
}
