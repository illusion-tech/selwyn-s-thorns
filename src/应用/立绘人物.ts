import type { 字符串, 数值, 资源标识 } from '../运行时/全局常量.ts';

export interface 立绘人物管理器接口 {
    显示(立绘: 立绘人物类): Promise<void>;
    移除(): Promise<void>;
}

interface 创建参数 {
    立绘风格: 字符串[];
    立绘映射: { [键: 字符串]: [资源标识, 资源标识] },
    获取风格函数: () => 数值;
    设置风格函数: (风格: 数值) => void;
}

export class 立绘人物类 {
    #立绘人物管理器: 立绘人物管理器接口;
    #立绘风格: 字符串[];
    #立绘映射: { [键: 字符串]: [资源标识, 资源标识] };
    #立绘名称: 字符串 | null = null;
    #获取风格函数: () => 数值;
    #设置风格函数: (风格: 数值) => void;

    get 风格索引(): 数值 {
        return this.#获取风格函数();
    }

    set 风格索引(风格: 数值) {
        this.#设置风格函数(风格);
    }

    get 立绘资源(): 资源标识 {
        if (!this.#立绘名称) throw `立绘图片名称不能为空！`;
        const 立绘风格组 = this.#立绘映射[this.#立绘名称];
        if (!立绘风格组) throw `找不到名称为 ${this.#立绘名称} 的立绘！`;
        const 立绘 = 立绘风格组[this.风格索引];
        if (!立绘) throw `在 ${this.#立绘名称} 中找不到风格为 ${this.风格索引} 的立绘！}`;
        return 立绘;
    }

    get 切换按钮(): 资源标识 {
        return ["$51041126", "$51041127"][this.风格索引 % 2] as 资源标识;
    }

    constructor(
        立绘人物管理器: 立绘人物管理器接口,
        创建参数: 创建参数,
    ) {
        if (!创建参数.立绘风格) throw `立绘风格不能为空！`;
        if (!创建参数.立绘映射) throw `立绘映射不能为空！`;
        if (!创建参数.获取风格函数) throw `获取风格函数不能为空！`;
        if (!创建参数.设置风格函数) throw `设置风格函数不能为空！`;

        const 风格数量 = 创建参数.立绘风格.length;
        for (const 立绘风格组 of Object.values(创建参数.立绘映射)) {
            if (立绘风格组.length !== 风格数量) throw `立绘映射中的立绘风格数量必须为 ${风格数量} 个！`;
        }

        this.#立绘人物管理器 = 立绘人物管理器;
        this.#立绘风格 = 创建参数.立绘风格;
        this.#立绘映射 = 创建参数.立绘映射;
        this.#获取风格函数 = 创建参数.获取风格函数;
        this.#设置风格函数 = 创建参数.设置风格函数;
    }

    async 显示(立绘名称: 字符串) {
        if (!立绘名称) throw `立绘图片名称不能为空！`;
        this.#立绘名称 = 立绘名称;
        await this.#立绘人物管理器.显示(this);
    }

    async 移除() {
        await this.#立绘人物管理器.移除();
    }

    async 切换立绘风格() {
        if (this.#立绘名称 === null) throw `在切换立绘风格前需要先将其显示！`;
        
        const 风格数量 = this.#立绘风格.length;
        const 当前风格 = this.风格索引;
        const 下一个风格 = (当前风格 + 1) % 风格数量;
        this.风格索引 = 下一个风格;

        await this.移除();
        await this.显示(this.#立绘名称);
    }
}